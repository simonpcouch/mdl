[{"path":[]},{"path":"https://simonpcouch.github.io/mdl/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://simonpcouch.github.io/mdl/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://simonpcouch.github.io/mdl/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://simonpcouch.github.io/mdl/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://simonpcouch.github.io/mdl/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://simonpcouch.github.io/mdl/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://simonpcouch.github.io/mdl/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://simonpcouch.github.io/mdl/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://simonpcouch.github.io/mdl/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://simonpcouch.github.io/mdl/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://simonpcouch.github.io/mdl/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://simonpcouch.github.io/mdl/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to mdl","title":"Contributing to mdl","text":"outlines propose change mdl. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://simonpcouch.github.io/mdl/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to mdl","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://simonpcouch.github.io/mdl/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to mdl","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://simonpcouch.github.io/mdl/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to mdl","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"simonpcouch/mdl\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://simonpcouch.github.io/mdl/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to mdl","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://simonpcouch.github.io/mdl/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to mdl","text":"Please note mdl project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://simonpcouch.github.io/mdl/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 RStudio, PBC Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://simonpcouch.github.io/mdl/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with mdl","title":"Getting help with mdl","text":"Thanks using mdl! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://simonpcouch.github.io/mdl/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with mdl","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty incredible ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://simonpcouch.github.io/mdl/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with mdl","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://simonpcouch.github.io/mdl/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with mdl","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://simonpcouch.github.io/mdl/articles/plain-r.html","id":"a-plain-r-alternative","dir":"Articles","previous_headings":"","what":"A plain R alternative","title":"Benchmarking against a plain R approach","text":"mdl::mtrx() mostly just glorified .matrix() method data frames makes dummy variables factors, characters, logicals. Let’s see mock plain R alternative, mdl_mtrx(), ’s just fast. First, ’ll write helper apply factors convert dummy variables, loosely based hardhat::fct_encode_one_hot(). ’s hard beat R converting characters factors, ’ll convert character vectors factors dummy variables via fct_encode_dummy(). rest variable types ’ll test one-liners. ’ll use data frame variety types benchmark article. Wrapping quick function: Passing data types make sure new function mdl_mtrx() want simplest case: Okay, , type checking, plenty issues edge cases, lean mean R function. Let’s check timings , first small dataset: bad, scrappy little feller! Now, reasonably sized datasets:  log scale tripping , ’s slice data largest numbers rows: timing, model.matrix() took 2.2x slower mdl::mtrx(), speedy plain R approach took 1.4x long.","code":"x <- factor(sample(letters[1:3], 100, replace = TRUE))  fct_encode_dummy <- function(x) {   row_names <- names(x)   col_names <- levels(x)   col_names <- col_names[-1]   dim_names <- list(row_names, col_names)   n_cols <- length(col_names)   n_rows <- length(x)   x <- unclass(x)   out <- matrix(0L, nrow = n_rows, ncol = n_cols, dimnames = dim_names)   loc <- cbind(row = seq_len(n_rows), col = x - 1)   out[loc] <- 1L   out } to_numeric <- function(x) {   switch(     class(x),     numeric = x,     integer = x,     character = fct_encode_dummy(as.factor(x)),     factor = fct_encode_dummy(x),     logical = x   ) }    mdl_mtrx <- function(formula, data) {   predictors <- mdl:::predictors(formula, data)      cols <- lapply(data[predictors], to_numeric)   do.call(cbind, cols) } create_data_frame <- function(n_rows) {   data.frame(     outcome = runif(n_rows),     pred_numeric = runif(n_rows),     pred_integer = sample(c(0L, 1L), n_rows, replace = TRUE),     pred_logical = sample(c(TRUE, FALSE), n_rows, replace = TRUE),     pred_factor_2 = factor(sample(letters[1:2], n_rows, replace = TRUE)),     pred_factor_3 = factor(sample(letters[1:3], n_rows, replace = TRUE)),     pred_character_2 = sample(letters[1:2], n_rows, replace = TRUE),     pred_character_3 = sample(letters[1:3], n_rows, replace = TRUE)   ) }  d <- create_data_frame(5)  d #>     outcome pred_numeric pred_integer pred_logical pred_factor_2 pred_factor_3 #> 1 0.2485387    0.1645692            0         TRUE             a             a #> 2 0.4028812    0.6632066            0         TRUE             b             b #> 3 0.7696302    0.8565750            1         TRUE             a             b #> 4 0.1194854    0.9265464            0         TRUE             b             c #> 5 0.1946950    0.5523776            0        FALSE             b             c #>   pred_character_2 pred_character_3 #> 1                b                c #> 2                a                a #> 3                b                a #> 4                b                c #> 5                a                c mdl_mtrx(outcome ~ ., d) #>      pred_numeric pred_integer pred_logical b b c b c #> [1,]    0.1645692            0            1 0 0 0 1 1 #> [2,]    0.6632066            0            1 1 1 0 0 0 #> [3,]    0.8565750            1            1 0 1 0 1 0 #> [4,]    0.9265464            0            1 1 0 1 1 1 #> [5,]    0.5523776            0            0 1 0 1 0 1 d <- create_data_frame(30)  bench::mark(   mdl_mtrx = mdl_mtrx(outcome ~ ., d),   `mdl::mtrx` = mdl::mtrx(outcome ~ ., d),   model.matrix = model.matrix(outcome ~ ., d),   check = FALSE ) #> # A tibble: 3 × 6 #>   expression        min   median `itr/sec` mem_alloc `gc/sec` #>   <bch:expr>   <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl> #> 1 mdl_mtrx        157µs    168µs     5697.      38KB     22.0 #> 2 mdl::mtrx       200µs    213µs     4577.     801KB     17.0 #> 3 model.matrix    791µs    832µs     1193.     489KB     21.8 res <-    bench::press(     n_rows = 10^seq(2:8),      {       d <- create_data_frame(n_rows)       bench::mark(         mdl_mtrx = mdl_mtrx(outcome ~ ., d),         `mdl::mtrx` = mdl::mtrx(outcome ~ ., d),         model.matrix = model.matrix(outcome ~ ., d),         check = FALSE       )     }   )  ggplot(res) +   aes(x = n_rows, y = median, col = expression) +   geom_point() +   scale_x_log10() res %>%    select(expression, median, mem_alloc) %>%   tail(3) #> # A tibble: 3 × 3 #>   expression     median mem_alloc #>   <bch:expr>   <bch:tm> <bch:byt> #> 1 mdl_mtrx        2.02s    3.02GB #> 2 mdl::mtrx       1.39s    1.84GB #> 3 model.matrix    3.06s    4.17GB timings <- res %>%    tail(3) %>%   pull(median) %>%   as.numeric()"},{"path":"https://simonpcouch.github.io/mdl/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Simon Couch. Author, maintainer. Mossa M. Reimert. Contributor. Posit Software, PBC. Copyright holder, funder.","code":""},{"path":"https://simonpcouch.github.io/mdl/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Couch S (2024). mdl: Modern model matrices. R package version 0.0.0.9000, https://simonpcouch.github.io/mdl/, https://github.com/simonpcouch/mdl.","code":"@Manual{,   title = {mdl: Modern model matrices},   author = {Simon Couch},   year = {2024},   note = {R package version 0.0.0.9000, https://simonpcouch.github.io/mdl/},   url = {https://github.com/simonpcouch/mdl}, }"},{"path":"https://simonpcouch.github.io/mdl/index.html","id":"mdl","dir":"","previous_headings":"","what":"Modern model matrices","title":"Modern model matrices","text":"mdl implements opinionated performant reimagining model matrices. package supplies one function, mdl::mtrx() (read: “model matrix”), takes formula data frame outputs numeric matrix. Compared base R friend model.matrix(), ’s really fast. package highly experimental. Interpret results caution!","code":""},{"path":"https://simonpcouch.github.io/mdl/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Modern model matrices","text":"can install development version mdl like :","code":"# install.packages(\"mdl\") pak::pak(\"simonpcouch/mdl\")"},{"path":"https://simonpcouch.github.io/mdl/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Modern model matrices","text":"output mdl::mtrx() looks lot like model.matrix(): Compared model.matrix(), mdl::mtrx() sort glorified .matrix() data frame method. specifically: accept formulae inlined functions (like - *). Never drops rows (thus doesn’t accept na.action). Assumes factors levels encoded ’re intended (.e. drop.unused.levels xlev accepted). ’s quite bit faster smaller data sets: factor speedup isn’t drastic larger datasets datasets factors, still quite substantial: Check article detailed benchmarks.","code":"# convert to factor to demonstrate dummy variable creations mtcars$cyl <- as.factor(mtcars$cyl)  head(   mdl::mtrx(mpg ~ ., mtcars) ) #>   (Intercept) cyl6 cyl8 disp  hp drat    wt  qsec vs am gear carb #> 1           1    1    0  160 110 3.90 2.620 16.46  0  1    4    4 #> 2           1    1    0  160 110 3.90 2.875 17.02  0  1    4    4 #> 3           1    0    0  108  93 3.85 2.320 18.61  1  1    4    1 #> 4           1    1    0  258 110 3.08 3.215 19.44  1  0    3    1 #> 5           1    0    1  360 175 3.15 3.440 17.02  0  0    3    2 #> 6           1    1    0  225 105 2.76 3.460 20.22  1  0    3    1 bench::mark(   mdl::mtrx(mpg ~ ., mtcars),   model.matrix(mpg ~ ., mtcars),   check = FALSE ) #> # A tibble: 2 × 6 #>   expression                         min   median `itr/sec` mem_alloc `gc/sec` #>   <bch:expr>                    <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl> #> 1 mdl::mtrx(mpg ~ ., mtcars)      23.1µs     26µs    37187.    3.32KB     18.6 #> 2 model.matrix(mpg ~ ., mtcars)  270.2µs    293µs     3337.  494.24KB     31.9 for (p in c(\"vs\", \"am\", \"gear\", \"carb\")) {   mtcars[[p]] <- as.factor(mtcars[[p]]) }  bench::mark(   mdl::mtrx(mpg ~ ., mtcars[rep(1:32, 1e5), ]),   model.matrix(mpg ~ ., mtcars[rep(1:32, 1e5), ]),   check = FALSE ) #> Warning: Some expressions had a GC in every iteration; so filtering is #> disabled. #> # A tibble: 2 × 6 #>   expression                             min median `itr/sec` mem_alloc `gc/sec` #>   <bch:expr>                           <bch> <bch:>     <dbl> <bch:byt>    <dbl> #> 1 mdl::mtrx(mpg ~ ., mtcars[rep(1:32,… 1.43s  1.43s     0.701  803.01MB    0.701 #> 2 model.matrix(mpg ~ ., mtcars[rep(1:… 2.01s  2.01s     0.497    1.86GB    1.99"},{"path":"https://simonpcouch.github.io/mdl/reference/mdl-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mdl: Modern model matrices — mdl-package","title":"mdl: Modern model matrices — mdl-package","text":"opinionated performant reimagining model matrices using Rust.","code":""},{"path":[]},{"path":"https://simonpcouch.github.io/mdl/reference/mdl-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mdl: Modern model matrices — mdl-package","text":"Maintainer: Simon Couch simon.couch@posit.co (ORCID) contributors: Mossa M. Reimert mossa@sund.ku.dk [contributor] Posit Software, PBC [copyright holder, funder]","code":""},{"path":"https://simonpcouch.github.io/mdl/reference/mtrx.html","id":null,"dir":"Reference","previous_headings":"","what":"Modern model matrices — mtrx","title":"Modern model matrices — mtrx","text":"mdl::mtrx() (read: \"model matrix\") implements opinionated performant reimagining model matrices. takes formula data frame, like model.frame(), outputs numeric matrix predictor values, like model.matrix().","code":""},{"path":"https://simonpcouch.github.io/mdl/reference/mtrx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modern model matrices — mtrx","text":"","code":"mtrx(formula, data)"},{"path":"https://simonpcouch.github.io/mdl/reference/mtrx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modern model matrices — mtrx","text":"formula formula. contain inlined functions like -*. data data frame.","code":""},{"path":"https://simonpcouch.github.io/mdl/reference/mtrx.html","id":"comparison-to-base-r","dir":"Reference","previous_headings":"","what":"Comparison to Base R","title":"Modern model matrices — mtrx","text":"Compared model.matrix(), mdl::mtrx(): accept formulae inlined functions (like - *). Never drops rows (thus accept na.action). Assumes factors levels encoded intended (.e. drop.unused.levels xlev accepted). mdl::mtrx() intended paired recipes package preprocessing.","code":""},{"path":"https://simonpcouch.github.io/mdl/reference/mtrx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modern model matrices — mtrx","text":"","code":"mdl::mtrx(mpg ~ ., mtcars) #>    (Intercept) cyl  disp  hp drat    wt  qsec vs am gear carb #> 1            1   6 160.0 110 3.90 2.620 16.46  0  1    4    4 #> 2            1   6 160.0 110 3.90 2.875 17.02  0  1    4    4 #> 3            1   4 108.0  93 3.85 2.320 18.61  1  1    4    1 #> 4            1   6 258.0 110 3.08 3.215 19.44  1  0    3    1 #> 5            1   8 360.0 175 3.15 3.440 17.02  0  0    3    2 #> 6            1   6 225.0 105 2.76 3.460 20.22  1  0    3    1 #> 7            1   8 360.0 245 3.21 3.570 15.84  0  0    3    4 #> 8            1   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #> 9            1   4 140.8  95 3.92 3.150 22.90  1  0    4    2 #> 10           1   6 167.6 123 3.92 3.440 18.30  1  0    4    4 #> 11           1   6 167.6 123 3.92 3.440 18.90  1  0    4    4 #> 12           1   8 275.8 180 3.07 4.070 17.40  0  0    3    3 #> 13           1   8 275.8 180 3.07 3.730 17.60  0  0    3    3 #> 14           1   8 275.8 180 3.07 3.780 18.00  0  0    3    3 #> 15           1   8 472.0 205 2.93 5.250 17.98  0  0    3    4 #> 16           1   8 460.0 215 3.00 5.424 17.82  0  0    3    4 #> 17           1   8 440.0 230 3.23 5.345 17.42  0  0    3    4 #> 18           1   4  78.7  66 4.08 2.200 19.47  1  1    4    1 #> 19           1   4  75.7  52 4.93 1.615 18.52  1  1    4    2 #> 20           1   4  71.1  65 4.22 1.835 19.90  1  1    4    1 #> 21           1   4 120.1  97 3.70 2.465 20.01  1  0    3    1 #> 22           1   8 318.0 150 2.76 3.520 16.87  0  0    3    2 #> 23           1   8 304.0 150 3.15 3.435 17.30  0  0    3    2 #> 24           1   8 350.0 245 3.73 3.840 15.41  0  0    3    4 #> 25           1   8 400.0 175 3.08 3.845 17.05  0  0    3    2 #> 26           1   4  79.0  66 4.08 1.935 18.90  1  1    4    1 #> 27           1   4 120.3  91 4.43 2.140 16.70  0  1    5    2 #> 28           1   4  95.1 113 3.77 1.513 16.90  1  1    5    2 #> 29           1   8 351.0 264 4.22 3.170 14.50  0  1    5    4 #> 30           1   6 145.0 175 3.62 2.770 15.50  0  1    5    6 #> 31           1   8 301.0 335 3.54 3.570 14.60  0  1    5    8 #> 32           1   4 121.0 109 4.11 2.780 18.60  1  1    4    2"},{"path":"https://simonpcouch.github.io/mdl/reference/mtrx_compatible.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if mtrx() will give matching results to model.matrix() — mtrx_compatible","title":"Check if mtrx() will give matching results to model.matrix() — mtrx_compatible","text":"following true, mtrx() returns matrix matches returned model.matrix() : non-default factor contrasts. Every column one numeric, integer, character, factor. na.action option \"na.pass\". case, code model.matrix() results slowdowns, one can write:","code":"if (mtrx_compatible(data)) {   res <- mtrx(formula, data) } else {   res <- model.matrix(formula, data) }"},{"path":"https://simonpcouch.github.io/mdl/reference/mtrx_compatible.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if mtrx() will give matching results to model.matrix() — mtrx_compatible","text":"","code":"mtrx_compatible(data, na_action = getOption(\"na.action\"))"},{"path":"https://simonpcouch.github.io/mdl/reference/mtrx_compatible.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if mtrx() will give matching results to model.matrix() — mtrx_compatible","text":"data data frame. na_action missing values–see na.pass(). Can either function character, just option can .","code":""},{"path":"https://simonpcouch.github.io/mdl/reference/mtrx_compatible.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if mtrx() will give matching results to model.matrix() — mtrx_compatible","text":"logical value. Returns TRUE mtrx() return similar matrix model.matrix(), FALSE otherwise.","code":""},{"path":"https://simonpcouch.github.io/mdl/reference/mtrx_compatible.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if mtrx() will give matching results to model.matrix() — mtrx_compatible","text":"case, \"matching\" output means dummy variables encoded way, missing values handled way (returned -), mtrx() error due presence unsupported column types.","code":""},{"path":"https://simonpcouch.github.io/mdl/reference/mtrx_compatible.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if mtrx() will give matching results to model.matrix() — mtrx_compatible","text":"","code":"# Compatible data frame df1 <- data.frame(a = 1:3, b = letters[1:3], c = factor(letters[1:3])) mtrx_compatible(df1) #> [1] TRUE  # Incompatible due to non-default contrasts df2 <- df1 contrasts(df2$c) <- \"contr.sum\" mtrx_compatible(df2) #> [1] FALSE  # Incompatible due to unsupported column type df3 <- data.frame(a = 1:3, b = as.Date(c(\"2023-01-01\", \"2023-01-02\", \"2023-01-03\"))) mtrx_compatible(df3) #> [1] FALSE  # Missing values are problematic only when na_action is not `na.pass` df4 <- data.frame(a = c(1, NA, 3), b = letters[1:3]) mtrx_compatible(df4, na_action = \"na.omit\") #> [1] FALSE mtrx_compatible(df4, na_action = \"na.pass\") #> [1] TRUE"}]
